CUDA_VISIBLE_DEVICES=0 python eval.py \
    rlbench.tasks=\[open_drawer\] \
    rlbench.task_name='multi' \
    rlbench.demo_path=$PERACT_ROOT/data/val \
    framework.gpu=0 \
    framework.logdir=$PERACT_ROOT/ckpts/ \
    framework.start_seed=0 \
    framework.eval_envs=1 \
    framework.eval_from_eps_number=0 \
    framework.eval_episodes=10 \
    framework.csv_logging=True \
    framework.tensorboard_logging=True \
    framework.eval_type='last' \
    rlbench.headless=True

CUDA_VISIBLE_DEVICES=0 python train.py \
    method=PERACT_BC \
    rlbench.tasks=\[put_item_in_drawer\] \
    rlbench.task_name='test_1' \
    rlbench.cameras=[front,left_shoulder,right_shoulder,wrist] \
    rlbench.demos=2 \
    rlbench.demo_path=$PERACT_ROOT/data/train \
    replay.batch_size=2 \
    replay.path=/tmp/replay \
    replay.max_parallel_processes=2 \
    method.voxel_sizes=[100] \
    method.voxel_patch_size=5 \
    method.voxel_patch_stride=5 \
    method.num_latents=2048 \
    method.transform_augmentation.apply_se3=True \
    method.transform_augmentation.aug_rpy=[0.0,0.0,45.0] \
    method.pos_encoding_with_lang=True \
    framework.training_iterations=100 \
    framework.num_weights_to_keep=10 \
    framework.start_seed=0 \
    framework.log_freq=10 \
    framework.save_freq=10 \
    framework.logdir=$PERACT_ROOT/logs/ \
    framework.csv_logging=True \
    framework.tensorboard_logging=True \
    ddp.num_devices=1

# Train 
CUDA_VISIBLE_DEVICES=0 python train.py \
    method=PERACT_BC \
    rlbench.tasks=\[a_stack_blocks\] \
    rlbench.task_name='place_blocks_take_0_p3' \
    rlbench.cameras=\[front,left_shoulder,right_shoulder,wrist\] \
    rlbench.demos=100 \
    rlbench.demo_path=$PERACT_ROOT/data/train \
    replay.batch_size=2 \
    replay.path=/tmp/replay \
    replay.max_parallel_processes=2 \
    method.voxel_sizes=\[100\] \
    method.voxel_patch_size=5 \
    method.voxel_patch_stride=5 \
    method.num_latents=2048 \
    method.transform_augmentation.apply_se3=True \
    method.transform_augmentation.aug_rpy=\[0.0,0.0,45.0\] \
    method.pos_encoding_with_lang=True \
    framework.training_iterations=7100\
    framework.num_weights_to_keep=15 \
    framework.start_seed=0 \
    framework.log_freq=500 \
    framework.save_freq=500 \
    framework.logdir=$PERACT_ROOT/logs/ \
    framework.csv_logging=True \
    framework.tensorboard_logging=True \
    ddp.num_devices=1 \
    rlbench.episode_length=10 \
    method.dense_clip_sims=False \
    method.no_rgb=False

# For testing if train is going alright
CUDA_VISIBLE_DEVICES=0 python train.py \
    method=PERACT_BC \
    rlbench.tasks=\[a_stack_blocks\] \
    rlbench.task_name='test_0' \
    rlbench.cameras=\[front,left_shoulder,right_shoulder,wrist\] \
    rlbench.demos=2 \
    rlbench.demo_path=$PERACT_ROOT/data/train \
    replay.batch_size=2 \
    replay.path=/tmp/replay \
    replay.max_parallel_processes=2 \
    method.voxel_sizes=\[100\] \
    method.voxel_patch_size=5 \
    method.voxel_patch_stride=5 \
    method.num_latents=2048 \
    method.transform_augmentation.apply_se3=True \
    method.transform_augmentation.aug_rpy=\[0.0,0.0,45.0\] \
    method.pos_encoding_with_lang=True \
    framework.training_iterations=100\
    framework.num_weights_to_keep=1 \
    framework.start_seed=0 \
    framework.log_freq=10 \
    framework.save_freq=10 \
    framework.logdir=$PERACT_ROOT/logs/ \
    framework.csv_logging=True \
    framework.tensorboard_logging=True \
    ddp.num_devices=1 \
    rlbench.episode_length=10 \
    method.dense_clip_sims=True \
    method.no_rgb=False

# Jars, vanilla peract, 10 demos, 512 latents
CUDA_VISIBLE_DEVICES=0 python train.py \
    method=PERACT_BC \
    rlbench.tasks=\[close_jar\] \
    rlbench.task_name='peract_close_jar' \
    rlbench.cameras=\[front,left_shoulder,right_shoulder,wrist\] \
    rlbench.demos=10 \
    rlbench.demo_path=$PERACT_ROOT/data/peract_baseline/train \
    replay.batch_size=1 \
    replay.path=/tmp/replay \
    replay.max_parallel_processes=2 \
    method.voxel_sizes=\[100\] \
    method.voxel_patch_size=5 \
    method.voxel_patch_stride=5 \
    method.num_latents=512 \
    method.transform_augmentation.apply_se3=True \
    method.transform_augmentation.aug_rpy=\[0.0,0.0,45.0\] \
    method.pos_encoding_with_lang=True \
    framework.training_iterations=7100\
    framework.num_weights_to_keep=15 \
    framework.start_seed=0 \
    framework.log_freq=500 \
    framework.save_freq=500 \
    framework.logdir=$PERACT_ROOT/logs/10_demos/ \
    framework.csv_logging=True \
    framework.tensorboard_logging=True \
    ddp.num_devices=1 \
    rlbench.episode_length=10
